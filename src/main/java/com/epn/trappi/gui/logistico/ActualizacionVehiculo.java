/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.epn.trappi.gui.logistico;

import com.epn.trappi.models.logistico.*;
import com.epn.trappi.models.logistico.servicios.*;
import java.awt.Color;
import java.awt.Font;
import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.PLAIN_MESSAGE;
import javax.swing.table.DefaultTableModel;
import static com.epn.trappi.models.logistico.servicios.ServicioVerificacion.*;

/**
 *
 * @author Alexander
 */
public class ActualizacionVehiculo extends javax.swing.JPanel {
    //ATRIBUTOS
    ServicioDbVehiculo servicioDB;
    ListaVehiculos vehiculos;
    Usos_ViewHandler handler;
    DefaultTableModel modelo;
    //METODOS
    public ActualizacionVehiculo() {
        initComponents();
        handler = new Usos_ViewHandler();
        vehiculos = new ListaVehiculos();
        servicioDB = new ServicioDbVehiculo();
        this.btnBuscarVehiculo.setBorder(new Logistico_GUI.RoundedBorder(24));
        this.btnActualizarInformacion.setBorder(new Logistico_GUI.RoundedBorder(24));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btnBuscarVehiculo = new javax.swing.JButton();
        txtBusquedaVehiculos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListaVehiculos = new javax.swing.JTable();
        cmbBusquedaVehiculos1 = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        cmbEstados = new javax.swing.JComboBox<>();
        txtKilometraje = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnActualizarInformacion = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1048, 770));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(96, 97, 101));
        jLabel1.setText("Actualización de Vehículos");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(219, 223, 228), 1, true));
        jPanel2.setForeground(new java.awt.Color(61, 57, 57));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(61, 57, 57));
        jLabel8.setText("Atributo de Búsqueda:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 30));

        btnBuscarVehiculo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnBuscarVehiculo.setForeground(new java.awt.Color(61, 57, 57));
        btnBuscarVehiculo.setText("Buscar");
        btnBuscarVehiculo.setContentAreaFilled(false);
        btnBuscarVehiculo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnBuscarVehiculoMouseMoved(evt);
            }
        });
        btnBuscarVehiculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarVehiculoMouseExited(evt);
            }
        });
        btnBuscarVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVehiculoActionPerformed(evt);
            }
        });
        jPanel2.add(btnBuscarVehiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 70, 150, 30));

        txtBusquedaVehiculos.setFont(new java.awt.Font("Segoe UI Semibold", 2, 14)); // NOI18N
        txtBusquedaVehiculos.setForeground(new java.awt.Color(153, 153, 153));
        txtBusquedaVehiculos.setText("Ingrese el valor de la columna que desea filtrar");
        txtBusquedaVehiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBusquedaVehiculosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtBusquedaVehiculosMouseExited(evt);
            }
        });
        jPanel2.add(txtBusquedaVehiculos, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 320, 30));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        tablaListaVehiculos.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tablaListaVehiculos.setForeground(new java.awt.Color(61, 57, 57));
        tablaListaVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Matrícula", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaListaVehiculos.setFocusable(false);
        tablaListaVehiculos.setGridColor(new java.awt.Color(255, 255, 255));
        tablaListaVehiculos.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tablaListaVehiculos.setOpaque(false);
        tablaListaVehiculos.setRowHeight(30);
        tablaListaVehiculos.setSelectionBackground(new java.awt.Color(61, 57, 57));
        tablaListaVehiculos.setShowGrid(false);
        tablaListaVehiculos.setShowHorizontalLines(true);
        tablaListaVehiculos.getTableHeader().setReorderingAllowed(false);
        tablaListaVehiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaListaVehiculosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaListaVehiculos);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 860, 230));

        cmbBusquedaVehiculos1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbBusquedaVehiculos1.setForeground(new java.awt.Color(61, 57, 57));
        cmbBusquedaVehiculos1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Matrícula", "Tipo de Vehículo", "Estado", "Kilometraje", "ID Vehículo" }));
        cmbBusquedaVehiculos1.setBorder(null);
        jPanel2.add(cmbBusquedaVehiculos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 140, 30));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(219, 223, 228), 1, true));
        jPanel10.setForeground(new java.awt.Color(61, 57, 57));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setBackground(new java.awt.Color(34, 45, 50));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(34, 45, 50));
        jLabel11.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://i.ibb.co/X4N1R0x/buscando-en-la-tierra.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        jLabel11.setText("  Buscar");
        jPanel10.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 14, 210, 30));

        jPanel7.setBackground(new java.awt.Color(19, 155, 151));
        jPanel7.setPreferredSize(new java.awt.Dimension(970, 5));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jPanel10.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, -1));

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 50));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 223, 228)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(61, 57, 57));
        jLabel14.setText("Estado del vehículo:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 140, 30));

        cmbEstados.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbEstados.setForeground(new java.awt.Color(61, 57, 57));
        cmbEstados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Habilitado", "En Espera", "Inhabilitado" }));
        cmbEstados.setBorder(null);
        jPanel1.add(cmbEstados, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 230, 30));

        txtKilometraje.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        txtKilometraje.setForeground(new java.awt.Color(61, 57, 57));
        jPanel1.add(txtKilometraje, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 230, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(61, 57, 57));
        jLabel10.setText("Kilometraje:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, 30));

        btnActualizarInformacion.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnActualizarInformacion.setForeground(new java.awt.Color(61, 57, 57));
        btnActualizarInformacion.setText("Actualizar Información");
        btnActualizarInformacion.setContentAreaFilled(false);
        btnActualizarInformacion.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnActualizarInformacionMouseMoved(evt);
            }
        });
        btnActualizarInformacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnActualizarInformacionMouseExited(evt);
            }
        });
        btnActualizarInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarInformacionActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizarInformacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, 320, 30));

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(61, 57, 57));
        jCheckBox1.setText("Obtener reporte del estado del vehículo");
        jPanel1.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 320, -1));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(219, 223, 228), 1, true));
        jPanel8.setForeground(new java.awt.Color(61, 57, 57));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setBackground(new java.awt.Color(34, 45, 50));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(34, 45, 50));
        jLabel9.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://i.ibb.co/WKk5jJ7/colision-de-coche.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        jLabel9.setText("  Actualización de datos");
        jPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 14, 210, 30));

        jPanel6.setBackground(new java.awt.Color(19, 155, 151));
        jPanel6.setPreferredSize(new java.awt.Dimension(970, 5));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jPanel8.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, -1));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarInformacionActionPerformed
        Vehiculo aux = new Vehiculo();
                strErrores+=verificarKilometraje(txtKilometraje.getText());
                if(!strErrores.equals(""))
                {
                    strErrores="Errores existentes:\n"+strErrores;
                    JOptionPane.showMessageDialog(null, strErrores , "Error al Buscar" , JOptionPane.ERROR_MESSAGE);
                    strErrores="";
                    return;
                }else {
                int kilometraje = Integer.parseInt(txtKilometraje.getText());
                int estado = cmbEstados.getSelectedIndex();
                int fila = tablaListaVehiculos.getSelectedRow();
                String id = (String)tablaListaVehiculos.getValueAt(fila, 0);
                //Vehiculo aux = new Vehiculo();
                aux.setID(Integer.parseInt(id.trim()));
                aux.setKilometraje(kilometraje);
                if(estado==0){
                    aux.setEstado(new Habilitado(aux));
                }else if(estado==1){
                    aux.setEstado(new EnEspera(aux));
                }else{
                    aux.setEstado(new Inhabilitado(aux));
                }
              }
        //JOptionPane.showMessageDialog(null,aux.getMatricula() + "," + aux.getKilometraje()+ ","+aux.getEstado().toString());
        try {
                servicioDB.actualizar(aux);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, null, "Error al actualizar veh" , JOptionPane.ERROR_MESSAGE);
            }
        
         int opcion = cmbBusquedaVehiculos1.getSelectedIndex();
        String campo_busqueda = txtBusquedaVehiculos.getText().trim();
        try{
        switch (opcion){
            case 0:
                vehiculos.setVehiculos(servicioDB.obtenerElementos().getDatos());
                break;
            case 1:
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.MATRICULA,campo_busqueda).getDatos());
                break;
            case 2:
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.TIPO,campo_busqueda).getDatos());
                break;
            case 3:
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.ESTADO,campo_busqueda).getDatos());
                break;
            case 4:
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.KILOMETRAJE,campo_busqueda).getDatos());
                break;
            case 5:
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.ID_VEHICULO,campo_busqueda).getDatos());
                break;
        }
        
        int numero_registros=0;
        try{
            numero_registros=vehiculos.getVehiculos().size();
            
            ArrayList<Vehiculo> lista = new ArrayList<>();
            for(int puntero=0;puntero<numero_registros;puntero++){
                lista.add(vehiculos.getVehiculos().get(puntero));
            }
            vehiculos.setVehiculos(lista);
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Ingrese un valor entero para el número de registros");
        }
        this.tablaListaVehiculos.setModel(vehiculos.mostrarLista());
        }catch (SQLException e){
                JOptionPane.showMessageDialog(null,"Base de datos fuera de servicio");
                }
        
        //this.tablaListaVehiculos.setModel(vehiculos.mostrarLista());
    }//GEN-LAST:event_btnActualizarInformacionActionPerformed

    private void btnBuscarVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVehiculoActionPerformed
        int opcion = cmbBusquedaVehiculos1.getSelectedIndex();
        String campo_busqueda = txtBusquedaVehiculos.getText().trim();
        try{
        switch (opcion){
            case 0:
                vehiculos.setVehiculos(servicioDB.obtenerElementos().getDatos());
                break;
            case 1:
                strErrores+=verificarMatricula(campo_busqueda);
                if(!strErrores.equals(""))
                {
                    strErrores="Errores existentes:\n"+strErrores;
                    JOptionPane.showMessageDialog(null, strErrores , "Error al Buscar el Vehículo" , JOptionPane.ERROR_MESSAGE);
                    strErrores="";
                    return;
                }else {
                    vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.MATRICULA,campo_busqueda).getDatos());
                    break;
                }
            case 2:
                strErrores+=verificarTipo(campo_busqueda);
                if(!strErrores.equals(""))
                {
                    strErrores="Errores existentes:\n"+strErrores;
                    JOptionPane.showMessageDialog(null, strErrores , "Error al Buscar" , JOptionPane.ERROR_MESSAGE);
                    strErrores="";
                    return;
                }else {
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.TIPO,campo_busqueda).getDatos());
                break;
                }
            case 3:
                strErrores+=verificarEstado(campo_busqueda);
                if(!strErrores.equals(""))
                {
                    strErrores="Errores existentes:\n"+strErrores;
                    JOptionPane.showMessageDialog(null, strErrores , "Error al Buscar" , JOptionPane.ERROR_MESSAGE);
                    strErrores="";
                    return;
                }else {
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.ESTADO,campo_busqueda).getDatos());
                break;
                }
            case 4:
                strErrores+=verificarKilometraje(campo_busqueda);
                if(!strErrores.equals(""))
                {
                    strErrores="Errores existentes:\n"+strErrores;
                    JOptionPane.showMessageDialog(null, strErrores , "Error al Buscar" , JOptionPane.ERROR_MESSAGE);
                    strErrores="";
                    return;
                }else {
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.KILOMETRAJE,campo_busqueda).getDatos());
                break;
                }
            case 5:
                strErrores+=verificarKilometraje(campo_busqueda);
                if(!strErrores.equals(""))
                {
                    strErrores="Errores existentes:\n"+strErrores;
                    JOptionPane.showMessageDialog(null, strErrores , "Error al Buscar" , JOptionPane.ERROR_MESSAGE);
                    strErrores="";
                    return;
                }else {
                vehiculos.setVehiculos(servicioDB.obtenerElementosPorFiltro(ServicioDbVehiculo.ID_VEHICULO,campo_busqueda).getDatos());
                break;
                }
        }
        
        int numero_registros=0;
        try{
            numero_registros=vehiculos.getVehiculos().size();
            
            ArrayList<Vehiculo> lista = new ArrayList<>();
            for(int puntero=0;puntero<numero_registros;puntero++){
                lista.add(vehiculos.getVehiculos().get(puntero));
            }
            vehiculos.setVehiculos(lista);
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Ingrese un valor entero para el número de registros");
        }
        this.tablaListaVehiculos.setModel(vehiculos.mostrarLista());
        }catch (SQLException e){
                JOptionPane.showMessageDialog(null,"Base de datos fuera de servicio");
                }
    }//GEN-LAST:event_btnBuscarVehiculoActionPerformed

    private void txtBusquedaVehiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBusquedaVehiculosMouseClicked
        txtBusquedaVehiculos.setText("");
        txtBusquedaVehiculos.setForeground(new Color(0,0,0));
        txtBusquedaVehiculos.setFont(new Font("Segoe UI Semibold", Font.PLAIN, 14));
    }//GEN-LAST:event_txtBusquedaVehiculosMouseClicked

    private void txtBusquedaVehiculosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBusquedaVehiculosMouseExited
        if (txtBusquedaVehiculos.getText().length()==0){
            txtBusquedaVehiculos.setForeground(new Color(153,153,153));
            txtBusquedaVehiculos.setFont(new Font("Segoe UI Semibold", Font.ITALIC, 14));
            txtBusquedaVehiculos.setText("Ingrese el valor de la columna que desea filtrar");
        }
    }//GEN-LAST:event_txtBusquedaVehiculosMouseExited

    private void tablaListaVehiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaListaVehiculosMouseClicked
        // TODO add your handling code here:
        int fila = tablaListaVehiculos.getSelectedRow();
        if((String)tablaListaVehiculos.getValueAt(fila, 2) == null){
            JOptionPane.showMessageDialog(null, "No se escogió ningún vehículo.", "Error", PLAIN_MESSAGE);
            return;
        }else{
            String estado = (String)tablaListaVehiculos.getValueAt(fila, 2);
            String kilometraje = (String)tablaListaVehiculos.getValueAt(fila,4);
            cmbEstados.setSelectedItem((String)estado);
            txtKilometraje.setText(kilometraje);
        }
    }//GEN-LAST:event_tablaListaVehiculosMouseClicked

    private void btnBuscarVehiculoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarVehiculoMouseMoved
        Color c = new Color(19,155,151);
        this.btnBuscarVehiculo.setForeground(c);
    }//GEN-LAST:event_btnBuscarVehiculoMouseMoved

    private void btnBuscarVehiculoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarVehiculoMouseExited
        Color c = new Color(61,57,57);
        this.btnBuscarVehiculo.setForeground(c);
    }//GEN-LAST:event_btnBuscarVehiculoMouseExited

    private void btnActualizarInformacionMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarInformacionMouseMoved
        Color c = new Color(19,155,151);
        this.btnActualizarInformacion.setForeground(c);
    }//GEN-LAST:event_btnActualizarInformacionMouseMoved

    private void btnActualizarInformacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarInformacionMouseExited
        Color c = new Color(61,57,57);
        this.btnActualizarInformacion.setForeground(c);
    }//GEN-LAST:event_btnActualizarInformacionMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarInformacion;
    private javax.swing.JButton btnBuscarVehiculo;
    private javax.swing.JComboBox<String> cmbBusquedaVehiculos1;
    private javax.swing.JComboBox<String> cmbEstados;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaListaVehiculos;
    private javax.swing.JTextField txtBusquedaVehiculos;
    private javax.swing.JTextField txtKilometraje;
    // End of variables declaration//GEN-END:variables
    private String strErrores="";
}
